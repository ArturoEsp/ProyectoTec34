<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
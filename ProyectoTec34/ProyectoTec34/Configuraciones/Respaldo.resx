<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>